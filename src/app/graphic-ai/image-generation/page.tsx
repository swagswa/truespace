"use client";

import { useState } from "react";
import { GlassButton } from "@/components/ui/glass-button";
import Link from "next/link";
import { AnimatedContainer } from "@/components/ui/animated-container";
import { motion } from "framer-motion";

export default function GraphicAIImageGeneration() {
  const [likedLessons, setLikedLessons] = useState<number[]>([]);
  const [completedLessons, setCompletedLessons] = useState<number[]>([]);
  const [expandedLessons, setExpandedLessons] = useState<number[]>([]);

  const toggleLike = (id: number) => {
    setLikedLessons(prev => 
      prev.includes(id) ? prev.filter(l => l !== id) : [...prev, id]
    );
  };

  const toggleComplete = (id: number) => {
    setCompletedLessons(prev => 
      prev.includes(id) ? prev.filter(l => l !== id) : [...prev, id]
    );
  };

  const toggleExpand = (id: number) => {
    setExpandedLessons(prev => 
      prev.includes(id) ? prev.filter(l => l !== id) : [...prev, id]
    );
  };

  const lessons = [
    {
      id: 1,
      title: "–í–≤–µ–¥–µ–Ω–∏–µ –≤ Midjourney",
      description: "–û—Å–Ω–æ–≤—ã —Ä–∞–±–æ—Ç—ã —Å Midjourney –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π",
      duration: "30 –º–∏–Ω",
      level: "–ù–∞—á–∞–ª—å–Ω—ã–π"
    },
    {
      id: 2,
      title: "DALL-E 3: –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è",
      description: "–ò–∑—É—á–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π DALL-E 3 –æ—Ç OpenAI –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π",
      duration: "25 –º–∏–Ω",
      level: "–ù–∞—á–∞–ª—å–Ω—ã–π"
    },
    {
      id: 3,
      title: "Stable Diffusion: –ª–æ–∫–∞–ª—å–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è",
      description: "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ Stable Diffusion –Ω–∞ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–º –∫–æ–º–ø—å—é—Ç–µ—Ä–µ",
      duration: "40 –º–∏–Ω",
      level: "–°—Ä–µ–¥–Ω–∏–π"
    },
    {
      id: 4,
      title: "–ü—Ä–æ–º–ø—Ç-–∏–Ω–∂–∏–Ω–∏—Ä–∏–Ω–≥ –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π",
      description: "–¢–µ—Ö–Ω–∏–∫–∏ —Å–æ–∑–¥–∞–Ω–∏—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–æ–º–ø—Ç–æ–≤ –¥–ª—è –ò–ò-–≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–æ–≤",
      duration: "35 –º–∏–Ω",
      level: "–°—Ä–µ–¥–Ω–∏–π"
    },
    {
      id: 5,
      title: "–°—Ç–∏–ª–∏ –∏ —Ö—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è",
      description: "–°–æ–∑–¥–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ö—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å—Ç–∏–ª—è—Ö",
      duration: "28 –º–∏–Ω",
      level: "–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π"
    },
    {
      id: 6,
      title: "–ö–æ–º–º–µ—Ä—á–µ—Å–∫–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ò–ò-–∞—Ä—Ç–∞",
      description: "–ü—Ä–∞–≤–æ–≤—ã–µ –∞—Å–ø–µ–∫—Ç—ã –∏ –º–æ–Ω–µ—Ç–∏–∑–∞—Ü–∏—è –ò–ò-–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π",
      duration: "22 –º–∏–Ω",
      level: "–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π"
    }
  ];

  return (
    <div className="flex flex-col items-center min-h-screen p-4 pt-4">
      <div className="w-full max-w-4xl">
        {/* Header */}
        <AnimatedContainer delay={0.1}>
          <div className="mb-4">
            <Link href="/graphic-ai" className="inline-block mb-6 mt-4">
              <motion.svg 
                className="w-6 h-6 text-white" 
                fill="none" 
                stroke="currentColor" 
                strokeWidth="2" 
                viewBox="0 0 24 24"
                whileHover={{ scale: 1.1, x: -2 }}
                whileTap={{ scale: 0.95 }}
                transition={{ duration: 0.2 }}
              >
                <path strokeLinecap="round" strokeLinejoin="round" d="M15 19l-7-7 7-7"/>
              </motion.svg>
            </Link>
            <div className="text-center">
              <AnimatedContainer delay={0.2}>
                <h1 className="text-3xl font-bold text-white mb-4">
                  –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
                </h1>
              </AnimatedContainer>
              <AnimatedContainer delay={0.3}>
                <p className="text-white/80 text-sm mb-8">
                  –°–æ–∑–¥–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å –ø–æ–º–æ—â—å—é –ò–ò: Midjourney, DALL-E, Stable Diffusion
                </p>
              </AnimatedContainer>
            </div>
          </div>
        </AnimatedContainer>

        {/* Lessons List */}
        <AnimatedContainer delay={0.4}>
          <div className="space-y-4">
            {lessons.map((lesson, index) => (
              <AnimatedContainer key={lesson.id} delay={0.5 + index * 0.1}>
                <motion.div 
                  className="bg-white/10 backdrop-blur-md rounded-xl p-6 border border-white/20"
                  whileHover={{ scale: 1.02, y: -2 }}
                  transition={{ duration: 0.2 }}
                >
              <div className="flex justify-between items-start mb-4">
                <div className="flex-1">
                  <h3 className="text-xl font-semibold text-white mb-2">{lesson.title}</h3>
                  <p className="text-white/70 text-sm mb-3">{lesson.description}</p>
                  <div className="flex gap-4 text-xs text-white/60">
                    <span>‚è±Ô∏è {lesson.duration}</span>
                    <span>üìä {lesson.level}</span>
                  </div>
                </div>
                <div className="flex gap-2 ml-4">
                  <motion.button
                    onClick={() => toggleLike(lesson.id)}
                    className={`p-2 rounded-lg transition-colors ${
                      likedLessons.includes(lesson.id)
                        ? 'bg-red-500/20 text-red-400'
                        : 'bg-white/10 text-white/60 hover:text-red-400'
                    }`}
                    whileHover={{ scale: 1.1 }}
                    whileTap={{ scale: 0.9 }}
                    transition={{ duration: 0.2 }}
                  >
                    ‚ù§Ô∏è
                  </motion.button>
                  <motion.button
                    onClick={() => toggleComplete(lesson.id)}
                    className={`p-2 rounded-lg transition-colors ${
                      completedLessons.includes(lesson.id)
                        ? 'bg-green-500/20 text-green-400'
                        : 'bg-white/10 text-white/60 hover:text-green-400'
                    }`}
                    whileHover={{ scale: 1.1 }}
                    whileTap={{ scale: 0.9 }}
                    transition={{ duration: 0.2 }}
                  >
                    ‚úì
                  </motion.button>
                  <motion.button
                    onClick={() => toggleExpand(lesson.id)}
                    className="p-2 rounded-lg bg-white/10 text-white/60 hover:text-white transition-colors"
                    whileHover={{ scale: 1.1 }}
                    whileTap={{ scale: 0.9 }}
                    transition={{ duration: 0.2 }}
                  >
                    {expandedLessons.includes(lesson.id) ? '‚ñº' : '‚ñ∂'}
                  </motion.button>
                </div>
              </div>
              
              {expandedLessons.includes(lesson.id) && (
                <div className="mt-4 p-4 bg-white/5 rounded-lg">
                  <p className="text-white/80 text-sm mb-3">
                    –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —É—Ä–æ–∫–µ: {lesson.title.toLowerCase()}
                  </p>
                  <ul className="text-white/70 text-sm space-y-1">
                    <li>‚Ä¢ –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–∏–º–µ—Ä—ã</li>
                    <li>‚Ä¢ –ì–æ—Ç–æ–≤—ã–µ –ø—Ä–æ–º–ø—Ç—ã</li>
                    <li>‚Ä¢ –ì–∞–ª–µ—Ä–µ—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤</li>
                  </ul>
                </div>
              )}
              
              <div className="mt-4">
                <motion.div
                  whileHover={{ scale: 1.05 }}
                  whileTap={{ scale: 0.95 }}
                  transition={{ duration: 0.2 }}
                >
                  <GlassButton variant="primary" size="sm">
                    –°–º–æ—Ç—Ä–µ—Ç—å —É—Ä–æ–∫
                  </GlassButton>
                </motion.div>
              </div>
                </motion.div>
              </AnimatedContainer>
            ))}
          </div>
        </AnimatedContainer>
      </div>
    </div>
  );
}